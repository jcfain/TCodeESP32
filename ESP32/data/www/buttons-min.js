Buttons={templates:[],setNameDebounce:void 0,updateDebounce:void 0,setup(){document.getElementById("bootButtonEnabled").checked=buttonSettings.bootButtonEnabled,document.getElementById("buttonSetsEnabled").checked=buttonSettings.buttonSetsEnabled,document.getElementById("bootButtonCommand").value=buttonSettings.bootButtonCommand.replace(" ","\n"),document.getElementById("buttonAnalogDebounce").value=buttonSettings.buttonAnalogDebounce,removeByClass("buttonSetRow"),buttonSettings.buttonSets.forEach(((buttonSet,setIndex)=>{const buttons=buttonSet.buttons,buttonSetsDiv=document.getElementById("buttonControls");let buttonSetNameRow=Utils.createTextFormRow(0,"Name","buttonSetName"+setIndex,buttonSet.name,25,function(setIndex){this.update(setIndex)}.bind(this,setIndex));buttonSetNameRow.input.setAttribute("readonly",!0);let buttonSetPinRow=Utils.createNumericFormRow(0,"Pin","buttonSetPin"+setIndex,buttonSet.pin,-1,255,function(setIndex){this.update(setIndex)}.bind(this,setIndex));buttonSetPinRow.input.name="buttonSetPins",buttonSetPinRow.input.setAttribute("readonly",!0),buttonSetPinRow.title="The pin this button set is on";var buttonSetEditButton=document.createElement("div");buttonSetEditButton.classList.add("tRow");var cell1=document.createElement("div");cell1.classList.add("tCell");var cell2=document.createElement("div");cell2.classList.add("tCell");var label=document.createElement("span");label.innerText="";var button=document.createElement("button");button.id="ButtonSetEditButton"+setIndex,button.innerText="Edit",button.onclick=function(setIndex){this.editButtonSet(setIndex)}.bind(this,setIndex),cell1.appendChild(label),cell2.appendChild(button),buttonSetEditButton.appendChild(cell1),buttonSetEditButton.appendChild(cell2),buttonSetNameRow.row.classList.add("buttonSetRow"),buttonSetPinRow.row.classList.add("buttonSetRow"),buttonSetEditButton.classList.add("buttonSetRow"),buttonSetsDiv.appendChild(buttonSetNameRow.row),buttonSetsDiv.appendChild(buttonSetPinRow.row),buttonSetsDiv.appendChild(buttonSetEditButton);var modalRootdiv=document.createElement("div");modalRootdiv.classList.add("formTable"),modalRootdiv.style="box-shadow: none; width: 100%;",modalRootdiv.id="buttonContainer"+setIndex,modalRootdiv.name="buttonContainer";var modalParent=document.createElement("div"),modalheader=document.createElement("div");modalheader.classList.add("tHeader"),modalParent.appendChild(modalheader);const buttonTable=document.createElement("div");buttonTable.id="buttonTable"+setIndex,buttonTable.setAttribute("name","buttonTable"),buttonTable.classList.add("formTable"),buttonTable.style="box-shadow: none; width: auto; margin: 0; padding: 0;";const buttonTableDiv=document.createElement("div");let buttonSetNameRowEdit=Utils.createTextFormRow(0,"Name","buttonSetNameEdit"+setIndex,buttonSet.name,25,function(setIndex){this.update(setIndex)}.bind(this,setIndex));buttonSetNameRowEdit.input.required=!0;let buttonSetPinRowEdit=Utils.createNumericFormRow(0,"Pin","buttonSetPinEdit"+setIndex,buttonSet.pin,-1,255,function(setIndex){this.update(setIndex)}.bind(this,setIndex));buttonSetPinRowEdit.input.required=!0,buttonSetPinRowEdit.title="The pin this button set is on",buttonTableDiv.appendChild(buttonSetNameRowEdit.row),buttonTableDiv.appendChild(buttonSetPinRowEdit.row);const buttonsRow=Utils.createLabelFormRow(0,"Set Buttons");buttonTableDiv.appendChild(buttonsRow.row);for(var i=0;i<buttons.length;i++){const buttonIndex=i;let buttonRow=Utils.createTextFormRow(0,"Name","buttonName"+setIndex+buttonIndex,buttons[i].name,25,function(setIndex,buttonIndex){validateStringControl("buttonName"+setIndex+buttonIndex,buttonSettings.buttonSets[setIndex].buttons[buttonIndex],"name")&&this.update(setIndex)}.bind(this,setIndex,buttonIndex));buttonRow.title="Name of the button",buttonRow.input.required=!0,buttonTableDiv.appendChild(buttonRow.row),buttonRow=Utils.createTextAreaFormRow(0,"Command","buttonCommand"+setIndex+buttonIndex,buttons[i].command,255,function(setIndex,buttonIndex){validateStringControl("buttonCommand"+setIndex+buttonIndex,buttonSettings.buttonSets[setIndex].buttons[buttonIndex],"command")&&this.update(setIndex)}.bind(this,setIndex,buttonIndex)),buttonRow.title="This is the TCode command executed when the button is pressed",buttonTableDiv.appendChild(buttonRow.row)}let span=document.createElement("span");span.classList.add("instruction-text"),span.innerHTML="\n            Instructions:<br>\n            You can enter any combination of TCode commands separated by spaces in the inputs above.\n            For example: '#motion-disable #resume #device-home #ok'\n            NOTE: There is currently no way to delay between the command execution.\n            ",modalParent.appendChild(buttonTable),buttonTable.appendChild(buttonTableDiv),modalParent.appendChild(span),modalRootdiv.appendChild(modalParent),this.templates.push(modalRootdiv)}))},update(setIndex,debounce){this.updateDebounce&&clearTimeout(this.updateDebounce),this.updateDebounce=setTimeout(function(setIndex){let valid=!0;const enabled=document.getElementById("bootButtonEnabled").checked;buttonSettings.bootButtonEnabled!=enabled&&(buttonSettings.bootButtonEnabled=enabled,showRestartRequired());const setsEnabled=document.getElementById("buttonSetsEnabled").checked;buttonSettings.buttonSetsEnabled!=setsEnabled&&(buttonSettings.buttonSetsEnabled=setsEnabled,showRestartRequired()),buttonSettings.bootButtonCommand=document.getElementById("bootButtonCommand").value.replace("\n"," "),validateIntControl("buttonAnalogDebounce",buttonSettings,"buttonAnalogDebounce")?buttonSettings.buttonAnalogDebounce=parseInt(document.getElementById("buttonAnalogDebounce").value):valid=!1,null!=setIndex&&(validateIntControl("buttonSetNameEdit"+setIndex,buttonSettings.buttonSets[setIndex].name,"name")?document.getElementById("buttonSetName"+setIndex).value=document.getElementById("buttonSetNameEdit"+setIndex).value:valid=!1,validateStringControl("buttonSetPinEdit"+setIndex,buttonSettings.buttonSets[setIndex].pin,"pin")?document.getElementById("buttonSetPin"+setIndex).value=document.getElementById("buttonSetPinEdit"+setIndex).value:valid=!1,validateStringControl("buttonSetName"+setIndex,buttonSettings.buttonSets[setIndex],"name")?buttonSettings.buttonSets[setIndex].name=document.getElementById("buttonSetNameEdit"+setIndex).value:valid=!1,validatePins()?this.updatebuttonSet(setIndex):valid=!1),valid&&postButtonSettings(0)}.bind(this,setIndex),debounce||3e3)},editButtonSet(index){const modal=document.getElementById("buttonSetsModal");removeAllChildren(modal),modal.appendChild(this.templates[index]),this.setbuttonSet(index);const header=document.createElement("span");header.innerText="Edit button set",header.setAttribute("slot","title"),modal.appendChild(header),modal.show()},setbuttonSet(setIndex){const buttons=buttonSettings.buttonSets[setIndex].buttons;for(var i=0;i<buttons.length;i++){const buttonIndex=i,button=buttons[i];document.getElementById("buttonName"+setIndex+buttonIndex).value=button.name,document.getElementById("buttonCommand"+setIndex+buttonIndex).value=button.command}},updatebuttonSet(setIndex){buttonSettings.buttonSets[setIndex].name=document.getElementById("buttonSetNameEdit"+setIndex).value,buttonSettings.buttonSets[setIndex].pin=parseInt(document.getElementById("buttonSetPinEdit"+setIndex).value);const buttons=buttonSettings.buttonSets[setIndex].buttons;for(var i=0;i<buttons.length;i++){const buttonIndex=i;document.getElementById("buttonName"+setIndex+buttonIndex)&&(buttonSettings.buttonSets[setIndex].buttons[i].name=document.getElementById("buttonName"+setIndex+buttonIndex).value,buttonSettings.buttonSets[setIndex].buttons[i].command=document.getElementById("buttonCommand"+setIndex+buttonIndex).value.replace("\n"," "))}},setButtonSetName(profileIndex){this.setNameDebounce&&clearTimeout(this.setNameDebounce),this.setNameDebounce=setTimeout(function(profileIndex){validateStringControl("buttonSetName"+profileIndex,buttonSettings.buttonSets[profileIndex],"name")&&postButtonSettings(0)}.bind(this,profileIndex),3e3)}};