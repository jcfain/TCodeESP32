Buttons={templates:[],setNameDebounce:void 0,updateDebounce:void 0,setup(){document.getElementById("bootButtonEnabled").checked=buttonSettings.bootButtonEnabled,document.getElementById("buttonSetsEnabled").checked=buttonSettings.buttonSetsEnabled,document.getElementById("bootButtonCommand").value=buttonSettings.bootButtonCommand.replace(" ","\n"),document.getElementById("buttonAnalogDebounce").value=buttonSettings.buttonAnalogDebounce,removeByClass("buttonSetRow"),buttonSettings.buttonSets.forEach(((t,e)=>{const n=t.buttons,o=document.getElementById("buttonControls");let u=Utils.createTextFormRow(0,"Name","buttonSetName"+e,t.name,25,function(t){this.update(t)}.bind(this,e));u.input.setAttribute("readonly",!0);let a=Utils.createNumericFormRow(0,"Pin","buttonSetPin"+e,t.pin,-1,255,function(t){this.update(t)}.bind(this,e));a.input.name="buttonSetPins",a.input.setAttribute("readonly",!0),a.title="The pin this button set is on";var d=document.createElement("div");d.classList.add("tRow");var i=document.createElement("div");i.classList.add("tCell");var s=document.createElement("div");s.classList.add("tCell");var l=document.createElement("span");l.innerText="";var b=document.createElement("button");b.id="ButtonSetEditButton"+e,b.innerText="Edit",b.onclick=function(t){this.editButtonSet(t)}.bind(this,e),i.appendChild(l),s.appendChild(b),d.appendChild(i),d.appendChild(s),u.row.classList.add("buttonSetRow"),a.row.classList.add("buttonSetRow"),d.classList.add("buttonSetRow"),o.appendChild(u.row),o.appendChild(a.row),o.appendChild(d);var m=document.createElement("div");m.classList.add("formTable"),m.style="box-shadow: none; width: 100%;",m.id="buttonContainer"+e,m.name="buttonContainer";var c=document.createElement("div"),r=document.createElement("div");r.classList.add("tHeader"),c.appendChild(r);const p=document.createElement("div");p.id="buttonTable"+e,p.setAttribute("name","buttonTable"),p.classList.add("formTable"),p.style="box-shadow: none; width: auto; margin: 0; padding: 0;";const S=document.createElement("div");let h=Utils.createTextFormRow(0,"Name","buttonSetNameEdit"+e,t.name,25,function(t){this.update(t)}.bind(this,e));h.input.required=!0;let g=Utils.createNumericFormRow(0,"Pin","buttonSetPinEdit"+e,t.pin,-1,255,function(t){this.update(t)}.bind(this,e));g.input.required=!0,g.title="The pin this button set is on",S.appendChild(h.row),S.appendChild(g.row);const E=Utils.createLabelFormRow(0,"Set Buttons");S.appendChild(E.row);for(var v=0;v<n.length;v++){const t=v;let o=Utils.createTextFormRow(0,"Name","buttonName"+e+t,n[v].name,25,function(t,e){validateStringControl("buttonName"+t+e,buttonSettings.buttonSets[t].buttons[e],"name")&&this.update(t)}.bind(this,e,t));o.title="Name of the button",o.input.required=!0,S.appendChild(o.row),o=Utils.createTextAreaFormRow(0,"Command","buttonCommand"+e+t,n[v].command,255,function(t,e){validateStringControl("buttonCommand"+t+e,buttonSettings.buttonSets[t].buttons[e],"command")&&this.update(t)}.bind(this,e,t)),o.title="This is the TCode command executed when the button is pressed",S.appendChild(o.row)}let B=document.createElement("span");B.classList.add("instruction-text"),B.innerHTML="\n            Instructions:<br>\n            You can enter any combination of TCode commands separated by spaces in the inputs above.\n            For example: '#motion-disable #resume #device-home #ok'\n            NOTE: There is currently no way to delay between the command execution.\n            ",c.appendChild(p),p.appendChild(S),c.appendChild(B),m.appendChild(c),this.templates.push(m)}))},update(t,e){this.updateDebounce&&clearTimeout(this.updateDebounce),this.updateDebounce=setTimeout(function(t){let e=!0;const n=document.getElementById("bootButtonEnabled").checked;buttonSettings.bootButtonEnabled!=n&&(buttonSettings.bootButtonEnabled=n,showRestartRequired());const o=document.getElementById("buttonSetsEnabled").checked;buttonSettings.buttonSetsEnabled!=o&&(buttonSettings.buttonSetsEnabled=o,showRestartRequired()),buttonSettings.bootButtonCommand=document.getElementById("bootButtonCommand").value.replace("\n"," "),validateIntControl("buttonAnalogDebounce",buttonSettings,"buttonAnalogDebounce")?buttonSettings.buttonAnalogDebounce=parseInt(document.getElementById("buttonAnalogDebounce").value):e=!1,null!=t?(validateIntControl("buttonSetNameEdit"+t,buttonSettings.buttonSets[t].name,"name")?document.getElementById("buttonSetName"+t).value=document.getElementById("buttonSetNameEdit"+t).value:e=!1,validateStringControl("buttonSetPinEdit"+t,buttonSettings.buttonSets[t].pin,"pin")?document.getElementById("buttonSetPin"+t).value=document.getElementById("buttonSetPinEdit"+t).value:e=!1,validateStringControl("buttonSetName"+t,buttonSettings.buttonSets[t],"name")?buttonSettings.buttonSets[t].name=document.getElementById("buttonSetNameEdit"+t).value:e=!1,validatePins()?this.updatebuttonSet(t):e=!1):e=validatePins(),e&&postButtonSettings(0)}.bind(this,t),e||3e3)},editButtonSet(t){const e=document.getElementById("buttonSetsModal");removeAllChildren(e),e.appendChild(this.templates[t]),this.setbuttonSet(t);const n=document.createElement("span");n.innerText="Edit button set",n.setAttribute("slot","title"),e.appendChild(n),e.show()},setbuttonSet(t){const e=buttonSettings.buttonSets[t].buttons;for(var n=0;n<e.length;n++){const o=n,u=e[n];document.getElementById("buttonName"+t+o).value=u.name,document.getElementById("buttonCommand"+t+o).value=u.command}},updatebuttonSet(t){buttonSettings.buttonSets[t].name=document.getElementById("buttonSetNameEdit"+t).value,buttonSettings.buttonSets[t].pin=parseInt(document.getElementById("buttonSetPinEdit"+t).value);const e=buttonSettings.buttonSets[t].buttons;for(var n=0;n<e.length;n++){const e=n;document.getElementById("buttonName"+t+e)&&(buttonSettings.buttonSets[t].buttons[n].name=document.getElementById("buttonName"+t+e).value,buttonSettings.buttonSets[t].buttons[n].command=document.getElementById("buttonCommand"+t+e).value.replace("\n"," "))}},setButtonSetName(t){this.setNameDebounce&&clearTimeout(this.setNameDebounce),this.setNameDebounce=setTimeout(function(t){validateStringControl("buttonSetName"+t,buttonSettings.buttonSets[t],"name")&&postButtonSettings(0)}.bind(this,t),3e3)},isButtonSetsEnabled:()=>buttonSettings.buttonSetsEnabled,isBootButtonEnabled:()=>buttonSettings.bootButtonEnabled};