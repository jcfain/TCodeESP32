; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
build_cache_dir = ./cache
boards_dir = ./boards
include_dir = ./

[com-ports]
monitor_speed = 115200
upload_speed = 921600
monitor_rts = 0
monitor_dtr = 0

[common]
lib_deps = 
	ArduinoJson@7.2.0
	
	Arduino
	hacker-cb/MPark-Variant @ 1.4.0
	https://github.com/multiaxis/TCode-Library#e0e572e
	
	https://github.com/jcfain/LTC2944-Arduino-Library.git
	dfrobot/DFRobot_DF2301Q@^1.0.0
build_unflags =
build_flags =
	-I src
	-I src/BLE
	-I src/HTTP
	-I src/logging
	-I src/Motion
	-I src/TCode
	-I src/TCode/v0.3
	-I src/TCode/v0.4
	-I lib
	-I lib/Ext
	-I lib/struct
lib_ldf_mode = chain+
board_build.filesystem = littlefs

[common:temperature]
lib_deps = 
	https://github.com/PaulStoffregen/OneWire.git#72249e2
	milesburton/DallasTemperature@3.11.0
	Adafruit BusIO@1.16.1

[common:display]
lib_deps = 
	adafruit/Adafruit SSD1306@2.5.10

[common:bldc]
lib_deps = 
	askuric/Simple FOC@2.3.4
	simplefoc/SimpleFOCDrivers@1.0.8

[common:power]
lib_deps =
	wifwaf/MCP45HVX1@^1.1.0

[common:ESP32]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/51.03.07/platform-espressif32.zip
framework = arduino
extends = common, com-ports
lib_deps = 
	${common.lib_deps}
build_flags = 
	${common.build_flags}
	-D SOC_WIFI_SUPPORTED=1
monitor_filters = esp32_exception_decoder

[common:ESP8266]
platform = espressif8266@4.2.0
extends = common
lib_deps = ${common.lib_deps}
build_unflags = ${common.build_unflags} -Werror=unused-const-variable
build_flags = ${common.build_flags}
	-D ESP8266
framework = arduino
monitor_filters = esp8266_exception_decoder
	send_on_enter
	colorize

[common:ESP32-wifi]
lib_ignore =
	AsyncTCP
lib_deps = 
	${common:ESP32.lib_deps}
	https://github.com/jcfain/AsyncTCP.git#3c03a52
	https://github.com/me-no-dev/ESPAsyncWebServer.git#67de9cd
build_flags = -D ASYNCWEBSERVER_REGEX

[common:ESP32-bluetooth]
lib_deps = 
	${common:ESP32.lib_deps}
	https://github.com/h2zero/NimBLE-Arduino.git#7bdcae5
build_flags = -D NIMBLE_LATEST

[common:ESP8266-wifi]
extends = common:ESP8266
lib_deps = 
	${common:ESP8266.lib_deps}
	ESP Async WebServer@1.2.4
build_flags = ${common:ESP8266.build_flags} -D ASYNCWEBSERVER_REGEX

[env:esp32doit-devkit-v1]
extends = common:ESP32, common:ESP32-wifi
board = esp32doit-devkit-v1
build_type = release
board_build.partitions = huge_app.csv
build_flags = -D WROOM32_MODULE
	${common:ESP32.build_flags}
	${common:ESP32-wifi.build_flags}
	${common:ESP32-bluetooth.build_flags}
	-D DEBUG_BUILD=0 -D BUILD_TEMP=1 -D BUILD_DISPLAY=1 -D BLUETOOTH_TCODE=0 -D BLE_TCODE=1 -D WIFI_TCODE=1 -D MOTOR_TYPE=0 -D SECURE_WEB=0 -D COEXIST=1 -D BUILD_POWER=0 -D BUILD_VOICE=0
lib_deps =
	${common:ESP32.lib_deps}
	${common:ESP32-wifi.lib_deps}
	${common:display.lib_deps}
	${common:temperature.lib_deps}
	${common:ESP32-bluetooth.lib_deps}

[env:esp32doit-devkit-v1-bldc]
extends = env:esp32doit-devkit-v1
build_unflags = -D MOTOR_TYPE=0
build_flags = ${env:esp32doit-devkit-v1.build_flags}
	-D MOTOR_TYPE=1
lib_deps =
	${env:esp32doit-devkit-v1.lib_deps}
	${common:bldc.lib_deps}
lib_archive = false

[env:esp32doit-devkit-v1-debug]
extends = env:esp32doit-devkit-v1
build_unflags = -D DEBUG_BUILD=0
build_flags = ${env:esp32doit-devkit-v1.build_flags}
	-D DEBUG_BUILD=1
build_type = debug

[env:esp32doit-devkit-v1-debug-prog]
extends = env:esp32doit-devkit-v1-debug
debug_init_break = tbreak setup
debug_tool = esp-prog
build_flags = ${env:esp32doit-devkit-v1-debug.build_flags}
	-D ESP_PROG

[env:esp32-devkit-v4]
extends = env:esp32doit-devkit-v1
board = az-delivery-devkit-v4

[env:esp32-devkit-v4-bldc]
extends = env:esp32doit-devkit-v1-bldc
board = az-delivery-devkit-v4

[env:esp32-s3-zero]
extends = common:ESP32, common:ESP32-wifi
board = esp32-s3-fh4r2
build_type = release
board_build.partitions = huge_app.csv
build_flags = -D S3_ZERO
	-D ARDUINO_USB_MODE=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D BOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	${common:ESP32.build_flags}
	${common:ESP32-wifi.build_flags}
	${common:ESP32-bluetooth.build_flags}
	-D DEBUG_BUILD=0 -D BUILD_TEMP=1 -D BUILD_DISPLAY=1 -D BLUETOOTH_TCODE=0 -D BLE_TCODE=1 -D WIFI_TCODE=1 -D MOTOR_TYPE=0 -D SECURE_WEB=0 -D COEXIST=1
lib_deps =
	${common:ESP32-wifi.lib_deps}
	${common:display.lib_deps}
	${common:temperature.lib_deps}
	${common:ESP32-bluetooth.lib_deps}

[env:esp32-s3-zero-bldc]
extends = env:esp32-s3-zero
build_unflags = -D MOTOR_TYPE=0
build_flags = ${env:esp32-s3-zero.build_flags}
	-D MOTOR_TYPE=1
lib_deps =
	${env:esp32-s3-zero.lib_deps}
	${common:bldc.lib_deps}
lib_archive = false

[env:esp32-s3-devkitc-1-N8R8]
extends = common:ESP32, common:ESP32-wifi
board = esp32-s3-devkitc-1
build_type = release
board_build.partitions = default_8MB.csv
board_build.arduino.memory_type = dio_opi
build_flags = -D BOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	${common:ESP32.build_flags}
	${common:ESP32-wifi.build_flags}
	${common:ESP32-bluetooth.build_flags}
	-D DEBUG_BUILD=0 -D BUILD_TEMP=1 -D BUILD_DISPLAY=1 -D BLUETOOTH_TCODE=0 -D BLE_TCODE=1 -D WIFI_TCODE=1 -D MOTOR_TYPE=0 -D SECURE_WEB=0 -D COEXIST=1
lib_deps =
	${common:ESP32-wifi.lib_deps}
	${common:display.lib_deps}
	${common:temperature.lib_deps}
	${common:ESP32-bluetooth.lib_deps}

[env:esp32-s3-devkitc-1-N8R8-bldc]
extends = env:esp32-s3-devkitc-1-N8R8
build_unflags = -D MOTOR_TYPE=0
build_flags = ${env:esp32-s3-devkitc-1-N8R8.build_flags}
	-D MOTOR_TYPE=1
lib_deps =
	${env:esp32-s3-devkitc-1-N8R8.lib_deps}
	${common:bldc.lib_deps}
lib_archive = false

[env:esp32-s3-devkitc-1-N8R8-debug]
extends = env:esp32-s3-devkitc-1-N8R8
build_unflags = -D DEBUG_BUILD=0
build_flags = ${env:esp32-s3-devkitc-1-N8R8.build_flags}
	-D DEBUG_BUILD=1
build_type = debug
debug_init_break = tbreak setup
debug_tool = cmsis-dap
upload_protocol = cmsis-dap

[env:sr6pcb]
extends = env:esp32doit-devkit-v1
build_flags = ${env:esp32doit-devkit-v1.build_flags} -D BUILD_POWER=1
lib_deps =
	${env:esp32doit-devkit-v1.lib_deps}
	${common:power.lib_deps}
monitor_filters = send_on_enter
monitor_echo = yes