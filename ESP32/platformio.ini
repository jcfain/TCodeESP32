; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; Set a path to a cache folder
build_cache_dir = ./cache
boards_dir = ./boards
include_dir = ./

[com-ports]
monitor_speed = 115200
upload_speed = 921600
monitor_rts = 0
monitor_dtr = 0

[common]
lib_deps = 
	;ArduinoJson@6.21.5
	ArduinoJson@7.0.2
	
	Arduino
	hacker-cb/MPark-Variant @ 1.4.0
	;Arduino_TCode_Parser
	https://github.com/multiaxis/TCode-Library#6cb3436
	;https://github.com/joltwallet/esp_littlefs.git ; required for espidf with arduino component
	
	https://github.com/jcfain/LTC2944-Arduino-Library.git
	dfrobot/DFRobot_DF2301Q@^1.0.0
build_unflags =
; 	-std=gnu++11 
build_flags =
; 	-std=c++17
;build_flags = -I../ParsingLibrary
lib_ldf_mode = chain+ ;to evaluate C/C++ Preprocessor conditional syntax for different builds. Keeps from compiling uneeded libraries.
board_build.filesystem = littlefs

[commonv3]
lib_deps = 
	;ArduinoJson@6.21.5
	ArduinoJson@7.0.2
	Arduino
	hacker-cb/MPark-Variant @ 1.4.0
	https://github.com/multiaxis/TCode-Library#6cb3436
	;Arduino_TCode_Parser
	;https://github.com/Dreamer2345/Arduino_TCode_Parser.git
	https://github.com/jcfain/LTC2944-Arduino-Library.git
	dfrobot/DFRobot_DF2301Q@^1.0.0

;build_flags = -I../ParsingLibrary
build_unflags =
; 	-std=gnu++11 
build_flags =
; 	-std=c++17
lib_ldf_mode = chain+ ;to evaluate C/C++ Preprocessor conditional syntax for different builds. Keeps from compiling uneeded libraries.
board_build.filesystem = littlefs

[common:TCode_V2]
lib_deps = ESP32Servo@3.0.5

[common:temperatureV3]
lib_deps = 
	https://github.com/PaulStoffregen/OneWire.git#72249e2
	milesburton/DallasTemperature@3.11.0
	Adafruit BusIO@1.16.1

[common:temperature]
lib_deps = 
	;paulstoffregen/OneWire@2.3.8
	https://github.com/PaulStoffregen/OneWire.git#72249e2
	milesburton/DallasTemperature@3.11.0
	Adafruit BusIO@1.16.1
	; SPI@2.0.0
    ; Wire@2.0.0
	;r-downing/AutoPID@^1.0.3

[common:display]
lib_deps = 
	adafruit/Adafruit SSD1306@2.5.10

[common:bldc]
lib_deps = 
	askuric/Simple FOC@2.3.4
	simplefoc/SimpleFOCDrivers@1.0.8

; [common:PICO]
; extends = common
; platform = raspberrypi
; board = pico
; framework = arduino
; build_flags = -DPICO_BUILD
; lib_deps = ${common.lib_deps} 
; 			khoih-prog/AsyncWebServer_RP2040W @ 1.5.0

[common:ESP32]
platform = espressif32@6.8.1
framework = arduino
extends = common
lib_deps = 
	${common.lib_deps}
build_flags = 
	${common.build_flags}
	-DESP32
	-DSOC_WIFI_SUPPORTED=1
;monitor_port = ${com-ports.release}
monitor_speed = ${com-ports.monitor_speed}
;upload_port = ${com-ports.release}
upload_speed = ${com-ports.upload_speed}
monitor_filters = esp32_exception_decoder 
					send_on_enter 
					colorize 
					;debug

; Arduino 3 build
; [common:ESP32]
; platform = espressif32@6.7.0
; framework = arduino
; ;https://github.com/platformio/platform-espressif32/releases
; ;https://github.com/espressif/arduino-esp32/releases/tag/3.0.4
; ;https://github.com/espressif/esp-idf/releases/tag/v5.1.4
; platform_packages =
; 	platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#3.0.4
; 	platformio/framework-arduinoespressif32-libs @ https://github.com/espressif/arduino-esp32/releases/download/3.0.4/esp32-arduino-libs-3.0.4.zip
; extends = common
; lib_deps = 
; 	${common.lib_deps}
; build_flags = 
; 	${common.build_flags}
; 	-DESP32
; 	-DESP_ARDUINO3
; 	-DSOC_WIFI_SUPPORTED=1
; ;monitor_port = ${com-ports.release}
; monitor_speed = ${com-ports.monitor_speed}
; ;upload_port = ${com-ports.release}
; upload_speed = ${com-ports.upload_speed}
; monitor_filters = esp32_exception_decoder 
; 					send_on_enter 
; 					colorize 
; 					;debug

[common:ESP32_Debug]
;build_unflags = -Os
build_type = debug
build_flags = -DDEBUG_BUILD=1
debug_init_break = tbreak setup
debug_tool = esp-prog


[common:ESP8266]
platform = espressif8266@4.2.0
extends = common
lib_deps = ${common.lib_deps}
build_unflags = ${common.build_unflags} -Werror=unused-const-variable
build_flags = -DESP8266
framework = arduino
;monitor_port = ${com-ports.release}
;monitor_speed = ${com-ports.monitor_speed}
;upload_port = ${com-ports.release}
;upload_speed = ${com-ports.upload_speed}
monitor_filters = esp8266_exception_decoder
					send_on_enter 
					colorize 
					;debug

[common:ESP32-wifi]
extends = common:ESP32
lib_deps = 
	${common:ESP32.lib_deps}
	AsyncTCP@1.1.1
	;ESP Async WebServer@1.2.4
	;hoeken/PsychicHttp
	https://github.com/me-no-dev/ESPAsyncWebServer.git
	;https://github.com/jasenk2/esp32_https_server.git#esp_tls
	;https://github.com/jasenk2/esp32_https_server.git
build_flags = -DASYNCWEBSERVER_REGEX

[common:ESP32-bluetooth]
extends = common:ESP32
lib_deps = 
	${common:ESP32.lib_deps}
	;h2zero/NimBLE-Arduino@^1.4.2
	https://github.com/h2zero/NimBLE-Arduino.git#7bdcae5
build_flags = -DNIMBLE_LATEST

[common:ESP8266-wifi]
extends = common:ESP8266
lib_deps = 
	${common:ESP8266.lib_deps}
	ESP Async WebServer@1.2.4
	;https://github.com/me-no-dev/ESPAsyncWebServer.git
build_flags = ${common:ESP8266.build_flags} -DASYNCWEBSERVER_REGEX

[common:esp32doit-devkit-v1-base]
board = esp32doit-devkit-v1
build_type = release
flash_mode = dio
partitions = huge_app.csv
f_cpu = 240000000L
mcu = esp32

[common:esp32doit-devkit-v1]
extends = common:ESP32-wifi
board_build.flash_mode = ${common:esp32doit-devkit-v1-base.flash_mode}
board_build.partitions =${common:esp32doit-devkit-v1-base.partitions}
board = ${common:esp32doit-devkit-v1-base.board}
#platform = ${common:esp32doit-devkit-v1-base.platform}
build_type = ${common:esp32doit-devkit-v1-base.build_type}

; [common:esp8266-ESP-01-base]
; extends = common:ESP8266-wifi
; board = esp01_1m
; board_build.mcu = esp8266
; build_type = release
; flash_mode = dio
; partitions = esp-01-partitions.csv
; board_build.f_cpu = 80000000L
			
#Common build
[env:esp32doit-devkit-v1]
extends = common:esp32doit-devkit-v1
;build_type = debug
build_flags = -DWROOM32_MODULE ${common:ESP32.build_flags} 
			${common:ESP32-wifi.build_flags}
			${common:ESP32-bluetooth.build_flags}
		-DDEBUG_BUILD=0 -DBUILD_TEMP=1 -DBUILD_DISPLAY=1 -DBLUETOOTH_TCODE=0 -DBLE_TCODE=1 -DWIFI_TCODE=1 -DESP32_DA=0 -DMOTOR_TYPE=0 -DSECURE_WEB=0 -DCOEXIST=1 #-DCORE_DEBUG_LEVEL=5 
lib_deps = ${common:ESP32-wifi.lib_deps} 
			${common:display.lib_deps} 
			${common:temperature.lib_deps}
			${common:ESP32-bluetooth.lib_deps} 

[env:esp32doit-devkit-v1-bldc]
extends = common:esp32doit-devkit-v1
build_flags = -DWROOM32_MODULE ${common:ESP32-wifi.build_flags}
		-DDEBUG_BUILD=0 -DBUILD_TEMP=1 -DBUILD_DISPLAY=1 -DBLUETOOTH_TCODE=0 -DBLE_TCODE=1 -DWIFI_TCODE=1 -DESP32_DA=0 -DMOTOR_TYPE=1 -DSECURE_WEB=0 -DCOEXIST=1  #-DCORE_DEBUG_LEVEL=5 
lib_deps = ${common:ESP32-wifi.lib_deps} 
			${common:bldc.lib_deps} 
			${common:display.lib_deps} 
			${common:temperature.lib_deps}
lib_archive = false #required for SimpleFOC

#Debug build
#https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/jtag-debugging/configure-ft2232h-jtag.html
#Launch Zadig and select all devices. Then replace the Dual RS232-HS (interface 0) ONLY. Leave interface 1 at default.
#leaving this note because my PC reverts drivers allot and I need redo these steps.
[env:esp32doit-devkit-v1-debug]
extends = common:esp32doit-devkit-v1, common:ESP32_Debug
;build_unflags = -Os
;build_type = debug
build_flags = -DWROOM32_MODULE ${common:ESP32_Debug.build_flags}
		${common:ESP32-wifi.build_flags}
		-DBUILD_TEMP=0 -DBUILD_DISPLAY=0 -DBLUETOOTH_TCODE=0 -DBLE_TCODE=0 -DWIFI_TCODE=1 -DESP32_DA=0 -DMOTOR_TYPE=0 -DSECURE_WEB=0 -DCOEXIST=0  #-DCORE_DEBUG_LEVEL=5 #-DFW_VERSION=%%date%%
; monitor_port = COM7
; upload_port = COM7
;debug_speed = 5000
;debug_tool = esp-prog
#upload_protocol = esp-prog
;debug_init_break = tbreak setup
lib_deps = 	${common:esp32doit-devkit-v1.lib_deps} 
build_type = ${common:ESP32_Debug.build_type}
			;${common:TCode_V2.lib_deps} 



; [env:pico]
; extends = common:PICO
; build_flags = ${common:PICO.build_flags}
; 		-DDEBUG_BUILD=0 -DBUILD_TEMP=0 -DBUILD_DISPLAY=0 -DBLUETOOTH_TCODE=0 -DBLE_TCODE=1 -DWIFI_TCODE=1 -DESP32_DA=0 -DMOTOR_TYPE=0 -DSECURE_WEB=0 #-DCORE_DEBUG_LEVEL=5 
; lib_deps = ${common:PICO.lib_deps} 
; 			${common:display.lib_deps}
; 			;${common:TCode_V2.lib_deps} 
; 			${common:ESP32-bluetooth.lib_deps}

#S3
[env:esp32-s3-zero]
extends = common:ESP32
board = esp32-s3-fh4r2
;board = esp32-s3-devkitm-1
build_type = release
board_build.partitions = huge_app.csv
build_flags = -DS3_MODULE
			; -DARDUINO_USB_MODE=1
			; -DARDUINO_USB_CDC_ON_BOOT=1 
			; -DBOARD_HAS_PSRAM
			; -mfix-esp32-psram-cache-issue
			${common:ESP32.build_flags} 
			${common:ESP32-wifi.build_flags}
			${common:ESP32-bluetooth.build_flags}
		-DDEBUG_BUILD=0 -DBUILD_TEMP=1 -DBUILD_DISPLAY=1 -DBLUETOOTH_TCODE=0 -DBLE_TCODE=1 -DWIFI_TCODE=1 -DESP32_DA=0 -DMOTOR_TYPE=0 -DSECURE_WEB=0 -DCOEXIST=1 #-DCORE_DEBUG_LEVEL=5 
lib_deps = ${common:ESP32-wifi.lib_deps} 
			${common:display.lib_deps} 
			${common:temperature.lib_deps}
			${common:ESP32-bluetooth.lib_deps} 
; [env:lolin_s3]
; extends = common:ESP32-wifi
; board = lolin_s3
; board_build.partitions = default_16MB.csv
; platform = espressif32
; build_type = release
; build_flags = ${common:ESP32-wifi.build_flags}
;     -DBOARD_HAS_PSRAM
;		-DARDUINO_USB_CDC_ON_BOOT=1 
;     -mfix-esp32-psram-cache-issue
; 		-DDEBUG_BUILD=0 -DBUILD_TEMP=1 -DBUILD_DISPLAY=1 -DBLUETOOTH_TCODE=0 -DWIFI_TCODE=1 -DESP32_DA=0 -DMOTOR_TYPE=0 -DSECURE_WEB=0 #-DCORE_DEBUG_LEVEL=5  #-DFW_VERSION=%%date%%
; lib_deps = ${common:ESP32-wifi.lib_deps} 
; 			${common:display.lib_deps} 
; 			${common:temperature.lib_deps}
; 			${common:ESP32-bluetooth.lib_deps} 

; #ESP32 DA (Dual antennae)
; [env:esp32doit-devkit-DA]
; extends = common:esp32doit-devkit-v1-wifi
; build_flags = ${common:ESP32-wifi.build_flags}
;		-DDEBUG_BUILD=0 -DBUILD_TEMP=0 -DBUILD_DISPLAY=0 -DBLUETOOTH_TCODE=0 -DWIFI_TCODE=1 -DESP32_DA=1 #-DCORE_DEBUG_LEVEL=5 

; [env:esp32doit-devkit-DA-display-temp]
; extends = env:esp32doit-devkit-v1-display-temp
; build_flags = ${common:ESP32-wifi.build_flags}
;		-DDEBUG_BUILD=0 -DBUILD_TEMP=1 -DBUILD_DISPLAY=1 -DBLUETOOTH_TCODE=0 -DWIFI_TCODE=1 -DESP32_DA=1 #-DCORE_DEBUG_LEVEL=5 


; [env:esp8266-ESP01]
; extends = common:esp8266-ESP-01-base
; build_flags = ${common:ESP8266-wifi.build_flags}
; 		-DESP01=1 -DDEBUG_BUILD=0 -DBUILD_TEMP=0 -DBUILD_DISPLAY=0 -DBLUETOOTH_TCODE=0 -DBLE_TCODE=0 -DWIFI_TCODE=1 -DESP32_DA=0 -DMOTOR_TYPE=0 -DSECURE_WEB=0 #-DCORE_DEBUG_LEVEL=5 
; lib_deps = ${common:ESP8266-wifi.lib_deps} 
; 			; ${common:display.lib_deps} 
; 			; ${common:temperature.lib_deps}
; 			; ${common:TCode_V2.lib_deps} 